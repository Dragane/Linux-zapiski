apiVersion: v1
kind: Service # Najprej naredimo service. Headless service je mandatory in linka vse 
metadata:
  name: nginx-headless # z imenom nginx-headless.
  labels:
    run: nginx-sts-demo
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None # ClusterIP mora biti setan na None.
  selector:
    run: nginx-sts-demo
---
apiVersion: apps/v1
kind: StatefulSet # Kreiramo zdaj StatefulSet
metadata:
  name: nginx-sts # ime stateful seta.
spec:
  serviceName: "nginx-headless" # kateri headless service bomo uporabli v tem stateful setu. Ime od pač headless seta definiranega zgoraj.
  replicas: 4 # želimo 4 replike.
  podManagementPolicy: Parallel # kako se bodo podi deployali. Po defaultu je Ordered. Če želimo vse pode naenkrat deployati, damo Parallel. K temu se bomo vrnili kasneje
  selector:
    matchLabels:
      run: nginx-sts-demo
  template:
    metadata:
      labels:
        run: nginx-sts-demo
    spec:
      containers:
      - name: nginx
        image: nginx
        volumeMounts:
        - name: www # ime voluma, ki ga bomo mountali.
          mountPath: /var/www/ # mountali ga bomo sem.
  volumeClaimTemplates: # VolumeClaimTemplates se lahko uporabi samo pri načinu resoursa StatefulSet. Ne bo nam treba kreirati PVC yaml fajla. Če bomo VolumeClaimTemplates uporabili pri recimo kind: deployment, ne bo delovalo.
  - metadata:
      name: www # ime se mora ujemati z imenom voluma zgoraj.
    spec:
      storageClassName: manual # class je manual, karkoli že to pomeni. To imajo vsi naši PVji.
      accessModes:
        - ReadWriteOnce # vsi naši PVji imajo RWO.
      resources:
        requests:
          storage: 100Mi # zahtevamo 100MB.
